import { Prop, Schema, SchemaFactory } from "@nestjs/mongoose";
import { ApiProperty } from "@nestjs/swagger";
import { Document } from 'mongoose';
import { BaseSchema } from "src/common-dto/base.schema";

@Schema()
export class <%= getBigModuleTitle(moduleConf.nameEn) %> extends BaseSchema {
    <% if(conf.config.UUID) {%>
    /**
    * UUID
    */
    @ApiProperty({
       description: 'UUID',
        required: false
    })
    @Prop({
        required: true,
        type: String
    })
    UUID: string;<% } %>
    <% for (let i = 0; i < fieldList.length; i++) { %>
    /**
    * <%=fieldList[i].name %>
    */
    @ApiProperty({
        description: '<%=fieldList[i].name %>',
        required: <%=fieldList[i].notNull %>
    })
    @Prop({<% if (fieldList[i].notNull) { %>
        required: [true,"<%=fieldList[i].name %>(<%=fieldList[i].nameEn %>)不能为空"],<% } else { %>
        required: false,<% } %><% if (fieldList[i].notRepeat) { %>
        unique: true,<% }%><% if (fieldList[i].defaultValue) { %>
        default: <%=fieldList[i].defaultValue%>,<% } %>
        type: <%-getBigModuleTitle(fieldList[i].type)%>
    })
    <%=fieldList[i].nameEn %>: <%-fieldList[i].type%>;
    <% if(["Select","MoreSelect","Radio","Checkbox","TreeSelect","MoreTreeSelect","AdministrativeDivision"].includes(fieldList[i].dom)){ %>
    /**
    * <%=fieldList[i].name %>名称
    */
    @ApiProperty({
        description: '<%=fieldList[i].name %>名称',
        required: <%=fieldList[i].notNull %>
    })
    @Prop({<% if (fieldList[i].notNull) { %>
        required: [true,"<%=fieldList[i].name %>名称(<%=fieldList[i].nameEn %>Text)不能为空"],<% } else { %>
        required: false,<% } %>
        type: <%-getBigModuleTitle(fieldList[i].type)%>
    })
    <%=fieldList[i].nameEn %>Text: string;
    <% } %>
    <% } %>
}

export type <%= getBigModuleTitle(moduleConf.nameEn) %>Document = <%= getBigModuleTitle(moduleConf.nameEn) %> & Document;

export const <%= getBigModuleTitle(moduleConf.nameEn) %>Schema = SchemaFactory.createForClass(<%= getBigModuleTitle(moduleConf.nameEn) %>);