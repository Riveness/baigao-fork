<template>
	<el-form :inline="true" :model="searchForm" class="demo-form-inline">
		<el-form-item>
			<slot></slot>
		</el-form-item>
		<el-form-item label="模糊搜索：">
			<el-input v-model="searchForm.keyWord" placeholder="<% for(let i=0;i<searchLike.length;i++) {%><%=searchLike[i].fieldName %><%if(i<searchLike.length-1) {%>/<% }%><% }%>" />
		</el-form-item><% for(let i=0;i<searchNoLike.length;i++) {%>
		<el-form-item label="<%=searchNoLike[i].fieldName %>:">
			<%- include(DomConf(searchNoLike[i]).tpl, DomConf(searchNoLike[i])) %>
		</el-form-item><%} %>
		<el-form-item>
			<el-button type="primary" @click="onSearch">搜索</el-button>
			<el-button @click="onReset">重置</el-button>
		</el-form-item>
	</el-form>
</template>
<script lang="ts" setup>
import { ref, watch } from 'vue';
import axios from "axios";
import { alertSuccess,alertWarning } from "@/utils/message";
<%if(searchNoLike.filter(item=>["MoreSelect","Select","Radio","Checkbox"].includes(item.dom)).length) {%>
import { SelectDto } from '@/common/CommonDto';
<%}%>
class SearchDto {
	keyWord?: string;
  	<% for (let i = 0; i < searchNoLike.length; i++) {%><%=searchNoLike[i].fieldEnName %>?: <%=searchNoLike[i].fieldType %>;<%} %>}
const searchForm = ref(new SearchDto());
const emit = defineEmits(['search']);

const onSearch = () => {
	emit('search', searchForm.value);
}
const onReset = () => {
	searchForm.value = new SearchDto();
	emit('search', searchForm.value);
}
<% if(searchLike.filter(item => item.isAuto).length){ %>
watch(() => searchForm.value.keyWord,() => {
	emit('search', searchForm.value);
});<%}%>
<% for(let i=0;i<searchNoLikeAuto.length;i++){ %>
watch(() => searchForm.value.<%=searchNoLikeAuto[i].fieldEnName%>,() => {
	emit('search', searchForm.value);
});<%}%>
<% for(let i=0;i<searchNoLike.length;i++) {%><%- include(DomEventConf(searchNoLike[i]).tpl, DomEventConf(searchNoLike[i])) %><%} %>
</script>